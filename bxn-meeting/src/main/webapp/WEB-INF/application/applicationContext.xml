<?xml version="1.0" encoding="UTF-8"?>
<!--suppress DuplicatedBeanNamesInspection -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd"
       default-lazy-init="false">

    <bean id="bxiServiceLocator" class="cn.boxiao.bxi.common.client.rest.invoker.BXIServiceLocator">
        <property name="connectSystem" value="${bxi.connectSystem}"/>
        <property name="currentAppKey" value="${remote.current_app_key}"/>
        <property name="currentAppPassword" value="${remote.current_app_password}"/>
        <property name="basePlatformInvoker" ref="basePlatformInvoker"/>
    </bean>
    <bean id="bxiRestInvoker" class="cn.boxiao.bxi.common.client.rest.invoker.BXIRestInvoker">
        <property name="globalBXIkey" value="${bxi.globalBXIKey}"/>
        <property name="restTemplate" ref="restTemplate"/>
        <property name="bxiServiceLocator" ref="bxiServiceLocator"/>
    </bean>
    <bean id="deviceMgrConnectService" class="cn.boxiao.bxi.common.client.service.DeviceMgrConnectServiceImpl">
        <property name="bxiRestInvoker" ref="bxiRestInvoker"/>
        <property name="bxiServiceLocator" ref="bxiServiceLocator"/>
    </bean>
    <bean id="deviceMonitingConnectService" class="cn.boxiao.bxi.common.client.service.DeviceMonitingConnectServiceImpl">
        <property name="bxiRestInvoker" ref="bxiRestInvoker"/>
        <property name="bxiServiceLocator" ref="bxiServiceLocator"/>
        <property name="mgrConnectService" ref="deviceMgrConnectService"/>
    </bean>
    
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
    	<constructor-arg ref="dataSource"/>
	</bean>
	
	<bean id="meetingCache" class="cn.boxiao.bxn.meeting.cache.MeetingCache"></bean>

    <beans profile="production">
        <context:property-placeholder ignore-resource-not-found="true" location="file:${BX_HOME}/config/common.properties,file:${BX_HOME}/config/meeting.properties"/>
        <bean id="platformProperties" class="cn.boxiao.bxn.common.util.HotPropertiesAccessor">
            <constructor-arg value="file:${BX_HOME}/config/meeting.properties"/>
        </bean>
    </beans>
    <beans profile="development">
        <context:property-placeholder ignore-resource-not-found="true" location="/WEB-INF/application/base/common.properties,/WEB-INF/application/meeting.properties,/WEB-INF/application/common-dev41.properties,/WEB-INF/application/meeting-dev.properties"/>
        <bean id="platformProperties" class="cn.boxiao.bxn.common.util.HotPropertiesAccessor">
            <constructor-arg value="/WEB-INF/application/meeting.properties"/>
        </bean>
    </beans>
    
    <!-- 配置定时器 -->
	<beans>
		<bean id="meetingTask" class="cn.boxiao.bxn.meeting.task.MeetingTask"></bean>
		<bean id="meetingCyclingTask" class="cn.boxiao.bxn.meeting.task.MeetingCyclingTask"></bean>
		<bean id="smsScheduler"
			class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<!-- 添加定时器 -->
			<property name="triggers">
				<list>
					<ref local="monitorMeetingTrigger" />
					<ref local="cyclingMeetingTrigger" />
				</list>
			</property>
		</bean>

		<bean id="monitorMeetingTrigger"
			class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
			<!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
			<property name="jobDetail">
				<ref bean="monitorMeetingJobDetail" />
			</property>
			<!-- 每1分钟触发 -->
			<property name="cronExpression">
				<value>0 */1 * * * ?</value>
			</property>

		</bean>
		<bean id="monitorMeetingJobDetail"
			class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
			<property name="targetObject">
				<ref bean="meetingTask" />
			</property>
			<property name="targetMethod">
				<value>doTask</value>
			</property>
		</bean>
		
		<bean id="cyclingMeetingTrigger"
			class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
			<!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
			<property name="jobDetail">
				<ref bean="cyclingMeetingJobDetail" />
			</property>
			<!-- 每天1点触发 -->
			<property name="cronExpression">
				<value>0 0 1 * * ? </value>
				<!-- <value>0 */3 * * * ?</value>  -->
			</property>

		</bean>
		<bean id="cyclingMeetingJobDetail"
			class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
			<property name="targetObject">
				<ref bean="meetingCyclingTask" />
			</property>
			<property name="targetMethod">
				<value>doTask</value>
			</property>
		</bean>

	</beans>
</beans>